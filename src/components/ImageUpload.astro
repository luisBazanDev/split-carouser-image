<form
  class="flex flex-col items-center justify-center bg-gray-100 p-6 rounded-lg shadow-md"
  id="image-upload"
  method="post"
>
  <select
    name="type"
    id="form-type"
    class="mb-4 p-2 rounded border border-gray-300"
  >
    <option value="horizontal">Horizontal</option>
    <option value="vertical">Vertical</option>
  </select>
  <input
    type="number"
    name="amount"
    id="form-amount"
    min="2"
    max="20"
    placeholder="Amount of images"
    value="2"
    class="mb-4 p-2 rounded border border-gray-300"
  />
  <input
    type="file"
    accept="jpg,png"
    id="form-image"
    placeholder="Image to split"
    class="mb-4 p-2 rounded border border-gray-300"
  />
  <button
    type="submit"
    class="bg-blue-500 text-white p-2 rounded hover:bg-blue-600">Submit</button
  >
</form>

<script>
  import { actions } from "astro:actions";

  const form = document.getElementById("image-upload");

  form?.addEventListener("submit", async (event) => {
    event.preventDefault();
    const type = (document.getElementById("form-type") as HTMLSelectElement)
      .value;
    const amount = parseInt(
      (document.getElementById("form-amount") as HTMLInputElement).value,
    );
    const imageInput = (
      document.getElementById("form-image") as HTMLInputElement
    ).files?.[0];

    if (imageInput) {
      const reader = new FileReader();
      reader.onloadend = async () => {
        const imageBase64 = reader.result as string;

        const img = new Image();
        img.src = imageBase64;
        img.onload = async () => {
          const width = img.width;
          const height = img.height;

          actions
            .splitImage({
              type,
              amount,
              image: imageBase64,
              width,
              height,
            })
            .then(async (response: any) => {
              if (response && response.data) {
                const downloadLink = document.createElement("a");
                downloadLink.href = `data:application/zip;base64,${response.data}`; // Assuming response.data is base64 for the zip file
                downloadLink.download = "images.zip"; // Changed to a zip file download
                downloadLink.style.display = "none";
                document.body.appendChild(downloadLink);
                downloadLink.click();
                document.body.removeChild(downloadLink);
              } else {
                console.error("Error: Invalid response from server.");
              }
            });
        };
      };
      reader.readAsDataURL(imageInput);
    } else {
      console.error("No image file selected.");
    }
  });
</script>
